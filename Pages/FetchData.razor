@page "/fetchdata"

@using Radzen.Blazor;

@using BlazorApp_ClientPortal.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }

        </tbody>
    </table>

    <br />
    <h3>Radzen Grid:</h3>
    <RadzenGrid AllowSorting="true" Data="@forecasts" TItem="WeatherForecast" AllowPaging="true" PageSize="3">
        <Columns>
            <RadzenGridColumn TItem="WeatherForecast" Context="data" Property="Date" Title="Date" Type="DateTime" FilterProperty="true">
                <Template>
                    @data.Date.ToShortDateString()
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="WeatherForecast" Context="data" Property="TemperatureC" Title="TemperatureC" Type="int">
                <Template>
                    @data.TemperatureC
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="WeatherForecast" Context="data" Property="TemperatureF" Title="TemperatureF" Type="int">
                <Template>
                    @data.TemperatureF
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="WeatherForecast" Context="data" Property="Summary" Title="Summary" Type="string">
                <Template>
                    @data.Summary
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
